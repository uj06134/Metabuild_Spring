<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.Ex02.mapper.ProductsMapper">
    <select id="selectAll">
        select *
        from products
        <where>
            <choose>
                <when test="whatColumn == 'all' and keyword != null and keyword != ''">
                    name like '%' || #{keyword} || '%' or
                    contents like '%' || #{keyword} || '%'
                </when>
                <when test="whatColumn != null and whatColumn != 'all' and keyword != null and keyword != ''">
                    ${whatColumn} like '%' || #{keyword} || '%'
                </when>
            </choose>
        </where>
        offset #{offset} rows fetch next #{limit} rows only
    </select>
    <select id="getCount" resultType="int">
        select count(*)
        from products
        <where>
            <choose>
                <when test="whatColumn == 'all' and keyword != null and keyword != ''">
                    name like '%' || #{keyword} || '%' or
                    contents like '%' || #{keyword} || '%'
                </when>
                <when test="whatColumn != null and whatColumn != 'all' and keyword != null and keyword != ''">
                    ${whatColumn} like '%' || #{keyword} || '%'
                </when>
            </choose>
        </where>
    </select>
    <insert id="insertProduct">
        insert into products (num, name, company, image, stock, price, contents, point, inputdate)
        values(seqprod.nextval, #{name}, #{company}, #{image}, #{stock}, #{price}, #{contents}, #{point}, #{inputdate})
    </insert>
    <select id="findByNum">
        select *
        from products
        where num = #{num}
    </select>
    <update id="updateProduct">
        update products set name = #{name}, company = #{company}, image = #{image}, stock = #{stock}, price = #{price}, contents = #{contents}, point = #{point}
        where num = #{num}
    </update>
    <delete id="deleteProduct">
        delete products
        where num = #{num}
    </delete>
    <update id="updateStock">
        update products
        set stock = stock - #{stock}
        where num = #{num}
    </update>


</mapper>